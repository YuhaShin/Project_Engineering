# Generated by Django 4.1 on 2022-08-14 06:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BikeUsage',
            fields=[
                ('row_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('station_id', models.TextField(blank=True, null=True)),
                ('use_dt', models.TextField(blank=True, null=True)),
                ('use_tm', models.TextField(blank=True, null=True)),
                ('rent_amt', models.BigIntegerField()),
                ('return_amt', models.BigIntegerField()),
            ],
            options={
                'db_table': 'BIKE_USAGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('bus_station_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bus_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CultureCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('culture_place_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'culture_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DongCode',
            fields=[
                ('dong_cd', models.IntegerField(primary_key=True, serialize=False)),
                ('dong_cd_8', models.TextField(blank=True, null=True)),
                ('dong_nm', models.TextField(blank=True, null=True)),
                ('gu_cd', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DONG_CODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DongPopul',
            fields=[
                ('row_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('base_dt', models.TextField(blank=True, null=True)),
                ('base_tm', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('life_popul', models.TextField(blank=True, null=True)),
                ('bus_popul', models.FloatField(blank=True, null=True)),
                ('subway_popul', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DONG_POPUL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('event_place_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventInfo',
            fields=[
                ('row_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('event_nm', models.TextField(blank=True, null=True)),
                ('place_id', models.IntegerField()),
                ('from_dt', models.DateField(blank=True, null=True)),
                ('to_dt', models.DateField(blank=True, null=True)),
                ('event_tm', models.TextField(blank=True, null=True)),
                ('target_kb', models.TextField(blank=True, null=True)),
                ('fare_amt', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'EVENT_INFO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventPlace',
            fields=[
                ('place_id', models.IntegerField(primary_key=True, serialize=False)),
                ('place_nm', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'EVENT_PLACE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuCode',
            fields=[
                ('gu_cd', models.IntegerField(primary_key=True, serialize=False)),
                ('gu_nm', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'GU_CODE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GuRain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rain_amt', models.TextField(blank=True, null=True)),
                ('gu_cd', models.TextField(blank=True, null=True)),
                ('base_dt', models.TextField(blank=True, null=True)),
                ('base_tm', models.TextField(blank=True, null=True)),
                ('gu_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'GU_RAIN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MallCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('mall_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mall_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParkCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('park_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'park_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoadCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('bike_road_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'road_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('school_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'school_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationNear',
            fields=[
                ('station_id', models.IntegerField(primary_key=True, serialize=False)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('bus_cnt', models.BigIntegerField(blank=True, null=True)),
                ('culture_cnt', models.BigIntegerField(blank=True, null=True)),
                ('event_cnt', models.BigIntegerField(blank=True, null=True)),
                ('mall_cnt', models.BigIntegerField(blank=True, null=True)),
                ('park_cnt', models.BigIntegerField(blank=True, null=True)),
                ('road_cnt', models.BigIntegerField(blank=True, null=True)),
                ('school_cnt', models.BigIntegerField(blank=True, null=True)),
                ('sub_cnt', models.BigIntegerField(blank=True, null=True)),
                ('tour_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'station_near',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('subway_station_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sub_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TourCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.TextField(blank=True, null=True)),
                ('station_addr', models.TextField(blank=True, null=True)),
                ('dong_cd', models.TextField(blank=True, null=True)),
                ('tour_place_cnt', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tour_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TourPlace',
            fields=[
                ('place_id', models.IntegerField(primary_key=True, serialize=False)),
                ('place_nm', models.TextField()),
                ('place_star', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TOUR_PLACE',
                'managed': False,
            },
        ),
    ]
